package com.rainhu;

/**
 * 1332. Remove Palindromic Subsequences (Easy)
 * 
 * You are given a string s consisting 'a' and 'b'.
 * In a single step you can remove one palidromic subsequence from s.
 * 
 * Return the minimum number of steps to make the given string empty.
 * 
 * A string is a subsequence of a given string if
 * it is generated by deleting some characters of a given string without changing its order.
 * Note that a subsequence does not necessarily need to be contiguous.
 * 
 * A string is called palindrome if is one that reads the same backward as well as forward.
 * 
 * @author: Rain Hu
 * @version: 1
 * @since: 2022/6/9
 * @apiNote: string
 */

public class n1332_RemovePalindromicSubsequences {
    public int removePalindromeSub(String s) {
        return isPalindrome(s) ? 1 : 2;
    }
    public boolean isPalindrome(String s){
        char[] ch = s.toCharArray();
        int left = 0, right = ch.length-1;
        while (left < right){
            if (ch[left++] != ch[right--])
                return false;
        }
        return true;
    }
}
